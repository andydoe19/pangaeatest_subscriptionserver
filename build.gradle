plugins {
    id "net.ltgt.apt-eclipse" version "0.21"
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "application"
}

compileJava {
    options.compilerArgs << '-parameters'
}

version "0.1"
group "pangaeatestsubscriptionserver"

repositories {
    maven { url "https://jcenter.bintray.com" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

ext {
    micronautDataVersion = "1.0.0.M3"
    micronautVersion = "1.3.7"
    lombokVersion = "1.18.12"
}

dependencies {
    //tag::lombok
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    //end::lombok

    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")

    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-graal"
    annotationProcessor "io.micronaut:micronaut-validation"
    annotationProcessor "io.micronaut.data:micronaut-data-processor:$micronautDataVersion" //<data>

    compileOnly "com.oracle.substratevm:svm"
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.micronaut:micronaut-http-server-netty"

    //data
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa:$micronautDataVersion")

    runtime "ch.qos.logback:logback-classic:1.2.3"
    runtime "com.h2database:h2"
    runtime "io.micronaut.configuration:micronaut-jdbc-tomcat"

    compile "com.fasterxml.jackson.module:jackson-module-parameter-names:2.9.0"

    //test
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testCompile "org.junit.jupiter:junit-jupiter-api"
    testCompile "io.micronaut.test:micronaut-test-junit5"
    testRuntime "org.junit.jupiter:junit-jupiter-engine"

}

test.classpath += configurations.developmentOnly

mainClassName = "pangaeatestsubscriptionserver.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}

//enable swagger ui views generation
tasks.withType(JavaCompile) {
    options.fork = true
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')

